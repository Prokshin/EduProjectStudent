export const user = {
  name: "Иван Иванов",
  courses: [
    {
      name: "web программирование",
      progress: 34
    },
    {
      name: "ООП",
      progress: 87
    }
  ]
};

const AllUserCourses = {
  courses: [
    {
      id: 0,
      name: "Базы данных",
      teacher: "Иванов Иван",
      progress: 40
    },
    {
      id: 1,
      name: "ООП",
      teacher: "Петров Пётр",
      progress: 70
    },
    {
      id: 2,
      name: "Функциональное программирование",
      teacher: "Иванов Иван",
      progress: 70
    }
  ]
};

const CourseDetail = [
  {
    id: 0,
    name: "Базы данных",
    topics: [
      {
        id: "0",
        name: "Иерархическая модель",
        text:
          "Иерархическая модель данных — это модель данных, где используется представление базы данных в виде древовидной (иерархической) структуры, состоящей из объектов (данных) различных уровней. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок имеет несколько потомков, тогда как у объекта-потомка обязателен только один предок. Объекты, имеющие общего предка, называются близнецами (в программировании применительно к структуре данных дерево устоялось название братья).Базы данных с иерархической моделью одни из самых старых, и стали первыми системами управления базами данных для мейнфреймов. Разрабатывались в 1950-х и 1960-х, например, Information Management System (IMS)[1] фирмы IBM.",
        tests: ["0001", "0002"],
        progress: "40"
      }
    ]
  },
  {
    id: 1,
    name: "Объектно-ориентированное программирование",
    topics: [
      {
        id: "0",
        name: "Классы",
        text:
          "Иерархическая модель данных — это модель данных, где используется представление базы данных в виде древовидной (иерархической) структуры, состоящей из объектов (данных) различных уровней. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок имеет несколько потомков, тогда как у объекта-потомка обязателен только один предок. Объекты, имеющие общего предка, называются близнецами (в программировании применительно к структуре данных дерево устоялось название братья).Базы данных с иерархической моделью одни из самых старых, и стали первыми системами управления базами данных для мейнфреймов. Разрабатывались в 1950-х и 1960-х, например, Information Management System (IMS)[1] фирмы IBM.",
        tests: ["0001", "0002"],
        progress: "50"
      },
      {
        id: "1",
        name: "Наследование",
        text:
          "Иерархическая модель данных — это модель данных, где используется представление базы данных в виде древовидной (иерархической) структуры, состоящей из объектов (данных) различных уровней. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок имеет несколько потомков, тогда как у объекта-потомка обязателен только один предок. Объекты, имеющие общего предка, называются близнецами (в программировании применительно к структуре данных дерево устоялось название братья).Базы данных с иерархической моделью одни из самых старых, и стали первыми системами управления базами данных для мейнфреймов. Разрабатывались в 1950-х и 1960-х, например, Information Management System (IMS)[1] фирмы IBM.",
        tests: ["0001", "0002"],
        progress: "0"
      },
      {
        id: "2",
        name: "Инкапсуляция",
        text:
          "Иерархическая модель данных — это модель данных, где используется представление базы данных в виде древовидной (иерархической) структуры, состоящей из объектов (данных) различных уровней. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок имеет несколько потомков, тогда как у объекта-потомка обязателен только один предок. Объекты, имеющие общего предка, называются близнецами (в программировании применительно к структуре данных дерево устоялось название братья).Базы данных с иерархической моделью одни из самых старых, и стали первыми системами управления базами данных для мейнфреймов. Разрабатывались в 1950-х и 1960-х, например, Information Management System (IMS)[1] фирмы IBM.",
        tests: ["0001", "0002"],
        progress: "0"
      },
      {
        id: "3",
        name: "Полиморфизм",
        text:
          "Иерархическая модель данных — это модель данных, где используется представление базы данных в виде древовидной (иерархической) структуры, состоящей из объектов (данных) различных уровней. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок имеет несколько потомков, тогда как у объекта-потомка обязателен только один предок. Объекты, имеющие общего предка, называются близнецами (в программировании применительно к структуре данных дерево устоялось название братья).Базы данных с иерархической моделью одни из самых старых, и стали первыми системами управления базами данных для мейнфреймов. Разрабатывались в 1950-х и 1960-х, например, Information Management System (IMS)[1] фирмы IBM.",
        tests: ["0001", "0002"],
        progress: "0"
      }
    ]
  },
  {
    id: 2,
    name: "Функциональное программирование",
    topics: [
      {
        id: "0",
        name: "Иерархическая модель",
        text:
          "Иерархическая модель данных — это модель данных, где используется представление базы данных в виде древовидной (иерархической) структуры, состоящей из объектов (данных) различных уровней. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок имеет несколько потомков, тогда как у объекта-потомка обязателен только один предок. Объекты, имеющие общего предка, называются близнецами (в программировании применительно к структуре данных дерево устоялось название братья).Базы данных с иерархической моделью одни из самых старых, и стали первыми системами управления базами данных для мейнфреймов. Разрабатывались в 1950-х и 1960-х, например, Information Management System (IMS)[1] фирмы IBM.",
        tests: ["0001", "0002"],
        progress: "40"
      }
    ]
  }
];

const tests = [
  {
    id: "0001",
    questions: [
      {
        text: "вопрос 1",
        answers: ["ответ 1", "ответ 2", "ответ 3"]
      },
      { text: "вопрос 1", answers: ["ответ 1", "ответ 2", "ответ 3"] },
      { text: "вопрос 1", answers: ["ответ 1", "ответ 2", "ответ 3"] }
    ],
    correct: [2, 1, 3]
  }
];

const teacher = [
  {
    id: 0,
    name: "Иван Иванов",
    img: null,
    courses: ["0", "2"]
  }
];

const allMyTeacher = {
  count: 2,
  results: [
    {
      id: 0,
      name: "Иван Иванов",
      img:
        "https://images.unsplash.com/photo-1506919258185-6078bba55d2a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2015&q=80",
      courses: [
        {
          id: "0",
          name: "Базы Данных"
        },
        {
          id: "2",
          name: "Функциональное программирование"
        }
      ]
    },
    {
      id: 1,
      name: "Пётр Петров",
      img:
        "https://images.unsplash.com/photo-1506919258185-6078bba55d2a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2015&q=80",
      courses: [
        {
          id: "1",
          name: "ООП"
        }
      ]
    }
  ]
};

export class DataService {
  getAllUserCourses() {
    return AllUserCourses;
  }
  getCourseInfo(id) {
    return AllUserCourses.courses[id];
  }
  getCourseDetail(id) {
    return CourseDetail[id];
  }
  getTestsById(id) {
    const t = tests.find((element, index, array) => {
      if (element.id === id) return true;
    });
    return t;
  }
  //Временно
  getAllCourses() {
    return AllUserCourses;
  }
  async getTeacher(id) {
    return teacher[id];
  }
  async getAllMyTeachers() {
    return allMyTeacher;
  }
}
